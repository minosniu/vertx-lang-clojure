(ns io.vertx.clojure.core.vertx-options)

(import io.vertx.core.VertxOptions)
(import io.vertx.core.json.JsonObject)

(defn new-instance
  ([] (new VertxOptions))
  ([^JsonObject json] (new VertxOptions json)))

(defn set-address-resolver-options [^VertxOptions vertx-options address-resolver-options] (.setAddressResolverOptions vertx-options address-resolver-options))
(defn get-address-resolver-options [^VertxOptions vertx-options] (.getAddressResolverOptions vertx-options))
(defn set-blocked-thread-check-interval [^VertxOptions vertx-options blocked-thread-check-interval] (.setBlockedThreadCheckInterval vertx-options blocked-thread-check-interval))
(defn get-blocked-thread-check-interval [^VertxOptions vertx-options] (.getBlockedThreadCheckInterval vertx-options))
(defn set-blocked-thread-check-interval-unit [^VertxOptions vertx-options blocked-thread-check-interval-unit] (.setBlockedThreadCheckIntervalUnit vertx-options blocked-thread-check-interval-unit))
(defn get-blocked-thread-check-interval-unit [^VertxOptions vertx-options] (.getBlockedThreadCheckIntervalUnit vertx-options))
(defn set-cluster-host [^VertxOptions vertx-options cluster-host] (.setClusterHost vertx-options cluster-host))
(defn get-cluster-host [^VertxOptions vertx-options] (.getClusterHost vertx-options))
(defn set-cluster-ping-interval [^VertxOptions vertx-options cluster-ping-interval] (.setClusterPingInterval vertx-options cluster-ping-interval))
(defn get-cluster-ping-interval [^VertxOptions vertx-options] (.getClusterPingInterval vertx-options))
(defn set-cluster-ping-reply-interval [^VertxOptions vertx-options cluster-ping-reply-interval] (.setClusterPingReplyInterval vertx-options cluster-ping-reply-interval))
(defn get-cluster-ping-reply-interval [^VertxOptions vertx-options] (.getClusterPingReplyInterval vertx-options))
(defn set-cluster-port [^VertxOptions vertx-options cluster-port] (.setClusterPort vertx-options cluster-port))
(defn get-cluster-port [^VertxOptions vertx-options] (.getClusterPort vertx-options))
(defn set-cluster-public-host [^VertxOptions vertx-options cluster-public-host] (.setClusterPublicHost vertx-options cluster-public-host))
(defn get-cluster-public-host [^VertxOptions vertx-options] (.getClusterPublicHost vertx-options))
(defn set-cluster-public-port [^VertxOptions vertx-options cluster-public-port] (.setClusterPublicPort vertx-options cluster-public-port))
(defn get-cluster-public-port [^VertxOptions vertx-options] (.getClusterPublicPort vertx-options))
(defn set-clustered [^VertxOptions vertx-options clustered] (.setClustered vertx-options clustered))
(defn is-clustered [^VertxOptions vertx-options] (.isClustered vertx-options))
(defn set-event-bus-options [^VertxOptions vertx-options event-bus-options] (.setEventBusOptions vertx-options event-bus-options))
(defn get-event-bus-options [^VertxOptions vertx-options] (.getEventBusOptions vertx-options))
(defn set-event-loop-pool-size [^VertxOptions vertx-options event-loop-pool-size] (.setEventLoopPoolSize vertx-options event-loop-pool-size))
(defn get-event-loop-pool-size [^VertxOptions vertx-options] (.getEventLoopPoolSize vertx-options))
(defn set-file-resolver-caching-enabled [^VertxOptions vertx-options file-resolver-caching-enabled] (.setFileResolverCachingEnabled vertx-options file-resolver-caching-enabled))
(defn is-file-resolver-caching-enabled [^VertxOptions vertx-options] (.isFileResolverCachingEnabled vertx-options))
(defn set-file-system-options [^VertxOptions vertx-options file-system-options] (.setFileSystemOptions vertx-options file-system-options))
(defn get-file-system-options [^VertxOptions vertx-options] (.getFileSystemOptions vertx-options))
(defn set-ha-enabled [^VertxOptions vertx-options ha-enabled] (.setHAEnabled vertx-options ha-enabled))
(defn is-ha-enabled [^VertxOptions vertx-options] (.isHAEnabled vertx-options))
(defn set-ha-group [^VertxOptions vertx-options ha-group] (.setHAGroup vertx-options ha-group))
(defn get-ha-group [^VertxOptions vertx-options] (.getHAGroup vertx-options))
(defn set-internal-blocking-pool-size [^VertxOptions vertx-options internal-blocking-pool-size] (.setInternalBlockingPoolSize vertx-options internal-blocking-pool-size))
(defn get-internal-blocking-pool-size [^VertxOptions vertx-options] (.getInternalBlockingPoolSize vertx-options))
(defn set-max-event-loop-execute-time [^VertxOptions vertx-options max-event-loop-execute-time] (.setMaxEventLoopExecuteTime vertx-options max-event-loop-execute-time))
(defn get-max-event-loop-execute-time [^VertxOptions vertx-options] (.getMaxEventLoopExecuteTime vertx-options))
(defn set-max-event-loop-execute-time-unit [^VertxOptions vertx-options max-event-loop-execute-time-unit] (.setMaxEventLoopExecuteTimeUnit vertx-options max-event-loop-execute-time-unit))
(defn get-max-event-loop-execute-time-unit [^VertxOptions vertx-options] (.getMaxEventLoopExecuteTimeUnit vertx-options))
(defn set-max-worker-execute-time [^VertxOptions vertx-options max-worker-execute-time] (.setMaxWorkerExecuteTime vertx-options max-worker-execute-time))
(defn get-max-worker-execute-time [^VertxOptions vertx-options] (.getMaxWorkerExecuteTime vertx-options))
(defn set-max-worker-execute-time-unit [^VertxOptions vertx-options max-worker-execute-time-unit] (.setMaxWorkerExecuteTimeUnit vertx-options max-worker-execute-time-unit))
(defn get-max-worker-execute-time-unit [^VertxOptions vertx-options] (.getMaxWorkerExecuteTimeUnit vertx-options))
(defn set-metrics-options [^VertxOptions vertx-options metrics-options] (.setMetricsOptions vertx-options metrics-options))
(defn get-metrics-options [^VertxOptions vertx-options] (.getMetricsOptions vertx-options))
(defn set-prefer-native-transport [^VertxOptions vertx-options prefer-native-transport] (.setPreferNativeTransport vertx-options prefer-native-transport))
(defn get-prefer-native-transport [^VertxOptions vertx-options] (.getPreferNativeTransport vertx-options))
(defn set-quorum-size [^VertxOptions vertx-options quorum-size] (.setQuorumSize vertx-options quorum-size))
(defn get-quorum-size [^VertxOptions vertx-options] (.getQuorumSize vertx-options))
(defn set-warning-exception-time [^VertxOptions vertx-options warning-exception-time] (.setWarningExceptionTime vertx-options warning-exception-time))
(defn get-warning-exception-time [^VertxOptions vertx-options] (.getWarningExceptionTime vertx-options))
(defn set-warning-exception-time-unit [^VertxOptions vertx-options warning-exception-time-unit] (.setWarningExceptionTimeUnit vertx-options warning-exception-time-unit))
(defn get-warning-exception-time-unit [^VertxOptions vertx-options] (.getWarningExceptionTimeUnit vertx-options))
(defn set-worker-pool-size [^VertxOptions vertx-options worker-pool-size] (.setWorkerPoolSize vertx-options worker-pool-size))
(defn get-worker-pool-size [^VertxOptions vertx-options] (.getWorkerPoolSize vertx-options))